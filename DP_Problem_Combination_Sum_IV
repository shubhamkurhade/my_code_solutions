// LeetCode problem Link - https://leetcode.com/problems/combination-sum-iv/
// Leetcode submission all codes - 

// Recusrion + Memoization Code (CPP)

#include <bits/stdc++.h> 
int helper(vector<int> &num, int tar, vector<int> &dp)
{
    if(tar<0)
        return 0;
    if(tar == 0)
        return 1;
    if(dp[tar] != -1)
        return dp[tar];
    int ans = 0;
    for(int i=0; i<num.size(); i++)
    {
        ans = ans + helper(num, tar-num[i], dp);
    }
    dp[tar] = ans;
    return dp[tar];
}

int findWays(vector<int> &num, int tar)
{
    vector<int> dp(tar+1, -1);
    return helper(num, tar, dp);
}

// DP - tabulation CPP

#include <bits/stdc++.h> 
int helper(vector<int> &num, int tar)
{
    vector<int> dp(tar+1, 0);
    dp[0] = 1;
    
    int ans = 0;
    for(int i=1; i<=tar; i++) // traversing for 1 to N 
    {
        for(int j=0; j<num.size(); j++) // traversing over the num
        {
            if(i-num[j] >= 0)
                dp[i] = dp[i] + dp[i - num[j]];
        }
    }
    return dp[tar];
}

int findWays(vector<int> &num, int tar)
{
    return helper(num, tar);
}
