// GFG link  - Get Minimum Squares - https://practice.geeksforgeeks.org/problems/get-minimum-squares0538/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

 // recursion + Memoization

//User function Template for Java

class Solution
{
    public int helper(int n, int[] dp)
    {
        if(n == 0)
        return 0;
        
        if(dp[n]!=0) 
        return dp[n];
        
        int ans = n; // what is the max number to make N - getiing it by 1^2
        for(int i=1; i*i<=n; i++)
        {
            ans = Math.min(ans, 1+helper(n-i*i, dp));
        }
        dp[n] = ans;
        return dp[n];
    }
    
    public int MinSquares(int n)
    {
        // recursion + Memoization
        int[] dp = new int[n+1];
        return helper(n, dp);
    }
}

//  Tabulation method


//User function Template for Java

class Solution
{
    public int helper(int n)
    {
       int[] dp = new int[n+1];
       Arrays.fill(dp, Integer.MAX_VALUE);
       dp[0] = 0;
       
       for(int i=1; i<=n; i++)
       {
           for(int j=1; j*j<=n; j++)
           {
               int temp = j*j;
               if(i-temp>=0)
                  {
                      dp[i] = Math.min(dp[i], 1+dp[i - temp]);
                  }
           }
       }
       return dp[n];
    }
    
    public int MinSquares(int n)
    {
        // Tabulation method
        return helper(n);
    }
}
